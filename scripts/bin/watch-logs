#!/bin/bash

# Monitors the logs for a given service and sets a tmux value if they fail
# Checks the last message and monitors for "fail" every 2 seconds
# Expects an argument which is the name of the service
# E.g. "watch compliance"

set -o pipefail

pgrep -f watch-logs && pkill -f watch-logs

# If the user doesn't provide a single argument, exit 1
if [ "$#" -ne 1 ]; then
  echo "Usage: failures <service_name>"
  return 1  # `return` instead of `exit` so sourcing doesn’t exit the shell
fi

CURRENT_SERVICE=$(docker ps --filter "name=$1" --filter "status=running" --format "{{.Names}}")
if [ -z "$CURRENT_SERVICE" ]; then
  echo "service '$1' not running"
  exit 1
fi

export CURRENT_SERVICE="$CURRENT_SERVICE"

touch "/tmp/current_service"
echo "$CURRENT_SERVICE" > "/tmp/current_service"

# Monitor logs every 2 seconds
(
    while true; do
        last_message=$(docker logs "$CURRENT_SERVICE" --tail 1 2>&1)
        if [[ "$last_message" == *"fail"* ]]; then
            tmux set -g status-right "#[fg=#E82424]✘ $CURRENT_SERVICE build failed #[bg=#252534,fg=#7E9CD8] %I:%M:%S "
        else
            tmux set -g status-right "#[fg=#98BB6C]✔️ $CURRENT_SERVICE build succeeded #[bg=#252534,fg=#7E9CD8] %I:%M:%S "
        fi
        sleep 2
    done
) &

